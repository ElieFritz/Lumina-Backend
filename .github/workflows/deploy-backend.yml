name: Deploy Backend to VPS

on:
  push:
    branches: [ main ]
    paths: [ 'backend/**', 'docker-compose.prod.yml', 'nginx/**' ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}

    - name: Add VPS to known hosts
      run: |
        ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

    - name: Copy files to VPS
      run: |
        # Create necessary directories
        ssh ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "mkdir -p /opt/lumina/{backend,nginx,logs}"
        
        # Copy backend files
        scp -r backend/ ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:/opt/lumina/
        scp -r nginx/ ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:/opt/lumina/
        scp docker-compose.prod.yml ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:/opt/lumina/docker-compose.yml
        scp .env.production ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:/opt/lumina/.env

    - name: Deploy on VPS
      run: |
        ssh ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
          cd /opt/lumina
          
          # Stop existing containers
          docker-compose down || true
          
          # Remove old images
          docker image prune -f
          
          # Build and start new containers
          docker-compose up -d --build
          
          # Wait for health check
          sleep 30
          
          # Check if backend is healthy
          if curl -f http://localhost:3001/health; then
            echo "✅ Backend deployed successfully"
          else
            echo "❌ Backend health check failed"
            docker-compose logs backend
            exit 1
          fi
        EOF

    - name: Notify deployment status
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "🎉 Backend deployment successful!"
        else
          echo "❌ Backend deployment failed!"
        fi

#!/bin/bash

# Script pour surveiller le d√©ploiement Render
echo "üìä Surveillance du d√©ploiement Render"
echo "===================================="

SERVICE_ID="srv-d36rf915pdvs73dc9b2g"
PROJECT_ID="prj-d36reom3jp1c73bfr25g"
API_URL="https://$SERVICE_ID.onrender.com"

echo "üìã Informations du service:"
echo "- Service ID: $SERVICE_ID"
echo "- Project ID: $PROJECT_ID"
echo "- API URL: $API_URL"
echo ""

echo "üîç V√©rification du statut du d√©ploiement..."
echo "Test de l'API toutes les 30 secondes..."
echo "Appuyez sur Ctrl+C pour arr√™ter"
echo ""

# Compteur pour les tentatives
attempt=1
max_attempts=20

while [ $attempt -le $max_attempts ]; do
    echo "üîÑ Tentative $attempt/$max_attempts - $(date)"
    
    # Test de l'API
    API_RESPONSE=$(curl -s --max-time 10 "$API_URL/api/health" 2>/dev/null)
    curl_exit_code=$?
    
    if [ $curl_exit_code -eq 0 ]; then
        if echo "$API_RESPONSE" | grep -q "ok"; then
            echo "‚úÖ API accessible et fonctionnelle!"
            echo "üìä R√©ponse: $API_RESPONSE"
            echo ""
            echo "üéâ D√©ploiement r√©ussi!"
            echo "üîó URLs disponibles:"
            echo "- Health Check: $API_URL/api/health"
            echo "- Swagger Docs: $API_URL/api/docs"
            echo "- API Base: $API_URL/api"
            echo ""
            echo "üß™ Tests suppl√©mentaires:"
            
            # Test Swagger
            echo "Test de Swagger..."
            SWAGGER_RESPONSE=$(curl -s --max-time 10 "$API_URL/api/docs" 2>/dev/null)
            if [ $? -eq 0 ]; then
                echo "‚úÖ Swagger accessible"
            else
                echo "‚ùå Swagger non accessible"
            fi
            
            # Test des utilisateurs
            echo "Test de l'API Users..."
            USERS_RESPONSE=$(curl -s --max-time 10 "$API_URL/api/users" 2>/dev/null)
            if [ $? -eq 0 ]; then
                echo "‚úÖ API Users accessible"
            else
                echo "‚ùå API Users non accessible"
            fi
            
            echo ""
            echo "‚úÖ Surveillance termin√©e - D√©ploiement r√©ussi!"
            exit 0
        else
            echo "‚è≥ API accessible mais pas encore pr√™te"
            echo "üìä R√©ponse: $API_RESPONSE"
        fi
    else
        echo "‚è≥ API pas encore accessible (code: $curl_exit_code)"
    fi
    
    echo ""
    
    # Attendre 30 secondes avant la prochaine tentative
    if [ $attempt -lt $max_attempts ]; then
        echo "‚è∞ Attente de 30 secondes avant la prochaine v√©rification..."
        sleep 30
    fi
    
    attempt=$((attempt + 1))
done

echo "‚è∞ Timeout atteint apr√®s $max_attempts tentatives"
echo ""
echo "üí° V√©rifiez manuellement:"
echo "1. Dashboard Render: https://dashboard.render.com/project/$PROJECT_ID"
echo "2. Cliquez sur le service $SERVICE_ID"
echo "3. V√©rifiez l'onglet 'Logs' pour voir les erreurs"
echo "4. V√©rifiez l'onglet 'Settings' pour confirmer la configuration"
echo ""
echo "üîß Configuration attendue:"
echo "- Build Command: npm install && npm run build"
echo "- Start Command: node index.js"
echo "- Root Directory: backend"
echo "- Health Check Path: /api/health"
echo ""
echo "‚ùå Surveillance termin√©e - D√©ploiement en cours ou √©chec"

#!/bin/bash

# Script pour v√©rifier le statut du d√©ploiement Render
echo "üîç V√©rification du statut du d√©ploiement Render"
echo "=============================================="

echo "üìã Informations du projet:"
echo "- Project ID: prj-d36reom3jp1c73bfr25g"
echo "- Repository: https://github.com/ElieFritz/Lumina"
echo "- Dernier commit: $(git log -1 --oneline)"
echo ""

echo "üåê V√©rification de la connectivit√©..."
if curl -s --max-time 10 https://render.com > /dev/null; then
    echo "‚úÖ Render.com accessible"
else
    echo "‚ùå Probl√®me de connectivit√© avec Render.com"
fi

echo ""
echo "üìä V√©rification des fichiers de d√©ploiement..."
if [ -f "index.js" ]; then
    echo "‚úÖ index.js pr√©sent"
    echo "   Contenu: $(cat index.js)"
else
    echo "‚ùå index.js manquant"
fi

if [ -f "dist/main.js" ]; then
    echo "‚úÖ dist/main.js pr√©sent"
else
    echo "‚ùå dist/main.js manquant"
fi

if [ -f "package.json" ]; then
    echo "‚úÖ package.json pr√©sent"
    if grep -q '"main": "dist/main.js"' package.json; then
        echo "‚úÖ Champ 'main' configur√©"
    else
        echo "‚ùå Champ 'main' manquant"
    fi
else
    echo "‚ùå package.json manquant"
fi

if [ -f "render.yaml" ]; then
    echo "‚úÖ render.yaml pr√©sent"
    if grep -q "startCommand: node index.js" render.yaml; then
        echo "‚úÖ startCommand configur√©"
    else
        echo "‚ùå startCommand incorrect"
    fi
else
    echo "‚ùå render.yaml manquant"
fi

echo ""
echo "üß™ Test local de l'application..."
echo "Arr√™t des processus existants..."
pkill -f "node index.js" 2>/dev/null || true
sleep 2

echo "D√©marrage de l'application..."
node index.js &
APP_PID=$!

sleep 5

echo "Test de l'endpoint de sant√©..."
HEALTH_RESPONSE=$(curl -s http://localhost:3001/api/health 2>/dev/null)

if [ $? -eq 0 ] && echo "$HEALTH_RESPONSE" | grep -q "ok"; then
    echo "‚úÖ Application locale fonctionnelle"
    echo "üìä R√©ponse: $HEALTH_RESPONSE"
else
    echo "‚ùå Probl√®me avec l'application locale"
    echo "üìä R√©ponse: $HEALTH_RESPONSE"
fi

kill $APP_PID 2>/dev/null
echo "üõë Application arr√™t√©e"

echo ""
echo "üìã Instructions pour v√©rifier le d√©ploiement Render:"
echo "1. Allez sur https://dashboard.render.com/project/prj-d36reom3jp1c73bfr25g"
echo "2. V√©rifiez que le service 'lumina-africa-backend' existe"
echo "3. Si le service n'existe pas:"
echo "   - Cliquez sur 'New +' ‚Üí 'Web Service'"
echo "   - Connectez le repository GitHub 'Lumina'"
echo "   - Configurez selon render.yaml"
echo "4. Si le service existe:"
echo "   - V√©rifiez les logs de d√©ploiement"
echo "   - Recherchez des erreurs ou des messages de succ√®s"
echo "   - Notez l'URL du service"

echo ""
echo "üîç V√©rification des logs Render:"
echo "1. Dans le dashboard Render, cliquez sur votre service"
echo "2. Allez dans l'onglet 'Logs'"
echo "3. Recherchez:"
echo "   - 'Build successful'"
echo "   - 'Deploy successful'"
echo "   - 'Application started'"
echo "   - Ou des erreurs sp√©cifiques"

echo ""
echo "üß™ Test de l'API d√©ploy√©e:"
echo "Une fois l'URL du service connue, testez:"
echo "curl https://VOTRE_URL.onrender.com/api/health"
echo "curl https://VOTRE_URL.onrender.com/api/docs"

echo ""
echo "‚úÖ V√©rification termin√©e!"

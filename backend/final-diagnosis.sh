#!/bin/bash

# Script de diagnostic final pour le probl√®me 502 Bad Gateway
echo "üîç Diagnostic Final - Probl√®me 502 Bad Gateway"
echo "============================================="

SERVICE_ID="srv-d36rf915pdvs73dc9b2g"
PROJECT_ID="prj-d36reom3jp1c73bfr25g"
API_URL="https://lumina-csjl.onrender.com"

echo "üìã Informations du service:"
echo "- Service ID: $SERVICE_ID"
echo "- Project ID: $PROJECT_ID"
echo "- API URL: $API_URL"
echo ""

echo "üîç V√©rification des fichiers de d√©ploiement..."
echo "1. Fichier index.js:"
if [ -f "index.js" ]; then
    echo "‚úÖ Pr√©sent"
    echo "Contenu:"
    cat index.js
else
    echo "‚ùå Manquant"
fi

echo ""
echo "2. Fichier dist/main.js:"
if [ -f "dist/main.js" ]; then
    echo "‚úÖ Pr√©sent"
    echo "Taille: $(ls -lh dist/main.js | awk '{print $5}')"
else
    echo "‚ùå Manquant - compilation n√©cessaire"
    echo "Ex√©cution de npm run build..."
    npm run build
fi

echo ""
echo "3. Fichier package.json:"
if [ -f "package.json" ]; then
    echo "‚úÖ Pr√©sent"
    echo "Champ 'main': $(grep '"main"' package.json)"
    echo "Scripts disponibles:"
    grep '"scripts"' -A 10 package.json
else
    echo "‚ùå Manquant"
fi

echo ""
echo "4. Fichier render.yaml:"
if [ -f "render.yaml" ]; then
    echo "‚úÖ Pr√©sent"
    echo "Configuration:"
    cat render.yaml
else
    echo "‚ùå Manquant"
fi

echo ""
echo "üß™ Test local de l'application..."
echo "Arr√™t des processus existants..."
pkill -f "node index.js" 2>/dev/null || true
sleep 2

echo "D√©marrage de l'application..."
node index.js &
APP_PID=$!

sleep 5

echo "Test de l'endpoint de sant√©..."
HEALTH_RESPONSE=$(curl -s http://localhost:3001/api/health 2>/dev/null)

if [ $? -eq 0 ] && echo "$HEALTH_RESPONSE" | grep -q "ok"; then
    echo "‚úÖ Application locale fonctionnelle"
    echo "üìä R√©ponse: $HEALTH_RESPONSE"
else
    echo "‚ùå Probl√®me avec l'application locale"
    echo "üìä R√©ponse: $HEALTH_RESPONSE"
fi

kill $APP_PID 2>/dev/null
echo "üõë Application arr√™t√©e"

echo ""
echo "üåê Test de l'API d√©ploy√©e..."
API_RESPONSE=$(curl -s --max-time 10 "$API_URL/api/health" 2>/dev/null)

if [ $? -eq 0 ]; then
    if echo "$API_RESPONSE" | grep -q "ok"; then
        echo "‚úÖ API d√©ploy√©e fonctionnelle"
        echo "üìä R√©ponse: $API_RESPONSE"
    else
        echo "‚ùå API d√©ploy√©e retourne une erreur"
        echo "üìä R√©ponse: $API_RESPONSE"
    fi
else
    echo "‚ùå API d√©ploy√©e non accessible"
    echo "üìä Code d'erreur: $?"
fi

echo ""
echo "üîç Analyse du probl√®me 502 Bad Gateway:"
echo "Une erreur 502 Bad Gateway indique que:"
echo "1. Le service Render est d√©ploy√© et accessible"
echo "2. Mais l'application Node.js ne d√©marre pas correctement"
echo "3. Ou l'application d√©marre mais crash imm√©diatement"
echo "4. Ou l'application ne r√©pond pas sur le port attendu"

echo ""
echo "üí° Solutions possibles:"
echo "1. V√©rifiez les logs du service sur Render:"
echo "   - Allez sur https://dashboard.render.com/project/$PROJECT_ID"
echo "   - Cliquez sur le service $SERVICE_ID"
echo "   - Consultez l'onglet 'Logs'"
echo ""
echo "2. V√©rifiez la configuration du service:"
echo "   - Build Command: npm install && npm run build"
echo "   - Start Command: node index.js"
echo "   - Root Directory: backend"
echo "   - Health Check Path: /api/health"
echo ""
echo "3. Probl√®mes courants:"
echo "   - Variables d'environnement manquantes"
echo "   - Port incorrect (doit √™tre 10000 pour Render)"
echo "   - Erreurs de compilation TypeScript"
echo "   - D√©pendances manquantes"
echo "   - Erreurs de base de donn√©es"

echo ""
echo "üîß Actions recommand√©es:"
echo "1. V√©rifiez les logs Render pour voir l'erreur exacte"
echo "2. Assurez-vous que toutes les variables d'environnement sont configur√©es"
echo "3. V√©rifiez que l'application d√©marre sur le port 10000"
echo "4. Testez localement avec les m√™mes variables d'environnement"

echo ""
echo "üìä R√©sum√©:"
echo "- Service Render: D√©ploy√© mais non fonctionnel"
echo "- Application locale: $(if [ -f "dist/main.js" ]; then echo "Compil√©e"; else echo "Non compil√©e"; fi)"
echo "- Configuration: $(if [ -f "render.yaml" ]; then echo "Pr√©sente"; else echo "Manquante"; fi)"
echo "- Probl√®me: 502 Bad Gateway - Application ne d√©marre pas sur Render"

echo ""
echo "‚úÖ Diagnostic termin√©!"

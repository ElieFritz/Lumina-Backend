#!/bin/bash

echo "üóÑÔ∏è  EX√âCUTION DES MIGRATIONS - EventLink Africa"
echo "=============================================="
echo ""

# Configuration
DB_HOST="localhost"
DB_PORT="5432"
DB_USER="postgres"
DB_PASSWORD="lumina2024"
DB_NAME="lumina_africa"

# Ajouter PostgreSQL au PATH
export PATH="/Library/PostgreSQL/17/bin:$PATH"

echo "üîß Configuration:"
echo "‚Ä¢ Host: $DB_HOST"
echo "‚Ä¢ Port: $DB_PORT"
echo "‚Ä¢ User: $DB_USER"
echo "‚Ä¢ Database: $DB_NAME"
echo ""

# V√©rifier la connexion
echo "1. Test de connexion..."
if PGPASSWORD=$DB_PASSWORD psql -h $DB_HOST -p $DB_PORT -U $DB_USER -d $DB_NAME -c "SELECT version();" > /dev/null 2>&1; then
    echo "‚úÖ Connexion PostgreSQL: OK"
else
    echo "‚ùå Connexion PostgreSQL: ERREUR"
    exit 1
fi

# Aller dans le dossier backend
cd backend

echo ""
echo "2. Installation des d√©pendances TypeORM..."
npm install typeorm

echo ""
echo "3. G√©n√©ration des migrations..."
npx typeorm migration:generate src/migrations/InitialTables -d src/database/data-source.ts

echo ""
echo "4. Ex√©cution des migrations..."
npx typeorm migration:run -d src/database/data-source.ts

echo ""
echo "5. V√©rification des tables cr√©√©es..."
PGPASSWORD=$DB_PASSWORD psql -h $DB_HOST -p $DB_PORT -U $DB_USER -d $DB_NAME -c "\dt"

echo ""
echo "‚úÖ Migrations termin√©es avec succ√®s!"
echo ""
echo "üìã Tables cr√©√©es:"
echo "‚Ä¢ users - Utilisateurs"
echo "‚Ä¢ venues - Lieux/√âtablissements"
echo "‚Ä¢ venue_images - Images des lieux"
echo "‚Ä¢ events - √âv√©nements"
echo "‚Ä¢ event_images - Images des √©v√©nements"
echo "‚Ä¢ bookings - R√©servations"
echo "‚Ä¢ reviews - Avis et commentaires"
echo "‚Ä¢ migrations - Historique des migrations"
echo ""
echo "üîó Vous pouvez maintenant utiliser pgAdmin pour explorer la base de donn√©es!"
